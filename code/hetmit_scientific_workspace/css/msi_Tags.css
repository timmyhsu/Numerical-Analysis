Huge:before {
  content: 'Huge';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for Huges (the first in this file) and replacing each occurrence of 'Huge' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
LARGE:before {
  content: 'LARGE';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for LARGEs (the first in this file) and replacing each occurrence of 'LARGE' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
Large:before {
  content: 'Large';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for Larges (the first in this file) and replacing each occurrence of 'Large' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
alt:before {
  content: 'alt';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for alts (the first in this file) and replacing each occurrence of 'alt' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
blackboardBold:before {
  content: 'blackboardBold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for blackboardBolds (the first in this file) and replacing each occurrence of 'blackboardBold' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for bolds (the first in this file) and replacing each occurrence of 'bold' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
boldsymbol:before {
  content: 'boldsymbol';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for boldsymbols (the first in this file) and replacing each occurrence of 'boldsymbol' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
calligraphic:before {
  content: 'calligraphic';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for calligraphics (the first in this file) and replacing each occurrence of 'calligraphic' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
descriptionLabel:before {
  content: 'descriptionLabel';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for descriptionLabels (the first in this file) and replacing each occurrence of 'descriptionLabel' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
drop:before {
  content: 'drop';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for drops (the first in this file) and replacing each occurrence of 'drop' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
emphasized:before {
  content: 'emphasized';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for emphasizeds (the first in this file) and replacing each occurrence of 'emphasized' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
footnotesize:before {
  content: 'footnotesize';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for footnotesizes (the first in this file) and replacing each occurrence of 'footnotesize' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
fraktur:before {
  content: 'fraktur';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for frakturs (the first in this file) and replacing each occurrence of 'fraktur' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
huge:before {
  content: 'huge';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for huges (the first in this file) and replacing each occurrence of 'huge' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
italics:before {
  content: 'italics';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for italicss (the first in this file) and replacing each occurrence of 'italics' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
large:before {
  content: 'large';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for larges (the first in this file) and replacing each occurrence of 'large' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
lower:before {
  content: 'lower';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for lowers (the first in this file) and replacing each occurrence of 'lower' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
ltxframe:before {
  content: 'ltxframe';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for ltxframes (the first in this file) and replacing each occurrence of 'ltxframe' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
normalsize:before {
  content: 'normalsize';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for normalsizes (the first in this file) and replacing each occurrence of 'normalsize' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
phantom:before {
  content: 'phantom';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for phantoms (the first in this file) and replacing each occurrence of 'phantom' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
roman:before {
  content: 'roman';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for romans (the first in this file) and replacing each occurrence of 'roman' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
rtl:before {
  content: 'rtl';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for rtls (the first in this file) and replacing each occurrence of 'rtl' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
sansSerif:before {
  content: 'sansSerif';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for sansSerifs (the first in this file) and replacing each occurrence of 'sansSerif' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
scriptsize:before {
  content: 'scriptsize';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for scriptsizes (the first in this file) and replacing each occurrence of 'scriptsize' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
slanted:before {
  content: 'slanted';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for slanteds (the first in this file) and replacing each occurrence of 'slanted' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
small:before {
  content: 'small';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for smalls (the first in this file) and replacing each occurrence of 'small' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
smallCaps:before {
  content: 'smallCaps';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for smallCapss (the first in this file) and replacing each occurrence of 'smallCaps' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
smallbox:before {
  content: 'smallbox';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for smallboxs (the first in this file) and replacing each occurrence of 'smallbox' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
sub:before {
  content: 'sub';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for subs (the first in this file) and replacing each occurrence of 'sub' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
sup:before {
  content: 'sup';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for sups (the first in this file) and replacing each occurrence of 'sup' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
tiny:before {
  content: 'tiny';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for tinys (the first in this file) and replacing each occurrence of 'tiny' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
typewriter:before {
  content: 'typewriter';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for typewriters (the first in this file) and replacing each occurrence of 'typewriter' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
underline:before {
  content: 'underline';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for underlines (the first in this file) and replacing each occurrence of 'underline' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
upper:before {
  content: 'upper';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for uppers (the first in this file) and replacing each occurrence of 'upper' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

bodyMath:before {
  content: 'bodyMath';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

bodyText:before {
  content: 'bodyText';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

centered:before {
  content: 'centered';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

flushleft:before {
  content: 'flushleft';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

flushright:before {
  content: 'flushright';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

p:before {
  content: 'p';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

rtlBodyText:before {
  content: 'rtlBodyText';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

sectiontitle:before {
  content: 'sectiontitle';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

shortQuote:before {
  content: 'shortQuote';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

verbatim:before {
  content: 'verbatim';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

bibitem:before {
  content: 'bibitem';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

bulletListItem:before {
  content: 'bulletListItem';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

descriptionListItem:before {
  content: 'descriptionListItem';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

numberedListItem:before {
  content: 'numberedListItem';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

chapter:before {
  content: 'chapter';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paragraph:before {
  content: 'paragraph';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

part:before {
  content: 'part';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

section:before {
  content: 'section';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

subparagraph:before {
  content: 'subparagraph';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

subsection:before {
  content: 'subsection';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

subsubsection:before {
  content: 'subsubsection';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

acknowledgment:before {
  content: 'acknowledgment';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

algorithm:before {
  content: 'algorithm';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

assertion:before {
  content: 'assertion';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

assumption:before {
  content: 'assumption';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

axiom:before {
  content: 'axiom';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

case:before {
  content: 'case';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

centeredEnv:before {
  content: 'centeredEnv';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

claim:before {
  content: 'claim';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

conclusion:before {
  content: 'conclusion';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

condition:before {
  content: 'condition';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

conjecture:before {
  content: 'conjecture';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

corollary:before {
  content: 'corollary';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

criterion:before {
  content: 'criterion';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

definition:before {
  content: 'definition';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

example:before {
  content: 'example';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

exercise:before {
  content: 'exercise';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

hypothesis:before {
  content: 'hypothesis';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

lemma:before {
  content: 'lemma';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

longQuotation:before {
  content: 'longQuotation';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

notation:before {
  content: 'notation';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

problem:before {
  content: 'problem';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

proof:before {
  content: 'proof';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

property:before {
  content: 'property';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

proposition:before {
  content: 'proposition';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

question:before {
  content: 'question';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

remark:before {
  content: 'remark';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

solution:before {
  content: 'solution';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

summary:before {
  content: 'summary';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

texnote:before {
  content: 'texnote';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

theorem:before {
  content: 'theorem';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

frontmtag:before {
  content: 'frontmtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

abstract:before {
  content: 'abstract';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

author:before {
  content: 'author';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

date:before {
  content: 'date';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
texttag:before {
  content: 'texttag';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

paratag:before {
  content: 'paratag';
  background-color: rgb(255,200,200);
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listparenttag:before {
  content: 'listparenttag';
  background-color: white;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

listtag:before {
  content: 'listtag';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

structtag:before {
  content: 'structtag';
  color: green;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

envtag:before {
  content: 'envtag';
  color: teal;
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

title:before {
  content: 'title';
  background-color: silver;
  font: bold small sans-serif;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

/* How this works:
Since the actual list of tags used in a document is dynamically determined by the tagdef files used, we have to construct the
CSS file for showing tag symbols dynamically. This file provides a template for each class of tag. For example, the CSS rules for
text tags is given by taking the template for texttags (the first in this file) and replacing each occurrence of 'texttag' in that 
template by the name of the particular text tag. Thus, 'bold' is a text tag, so the CSS rule for the bold tag is

bold:before {
  content: 'bold';
  font: bold small sans-serif;
  background-color: yellow;
  border: thin solid black;
  padding: 2px;
  -moz-border-radius: 4px;
}

This scheme allows for different colors for the various tag classes, but it also allows for much more variation in appearance, if that is desired.

*/
